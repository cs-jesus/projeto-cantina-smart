generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model TipoInstituicao {
  id          Int                          @id @default(autoincrement()) @map("id_tipo_instituicao")
  descricao   String                       @unique @map("descricao_tipo_instituicao") @db.VarChar(128)
  associacoes InstituicaoTipoInstituicao[]

  @@map("tipo_instituicao")
}

model Instituicao {
  id          Int                          @id @default(autoincrement()) @map("id_instituicao")
  nome        String                       @unique @map("nome_instituicao") @db.VarChar(255)
  sigla       String?                      @map("sigla_instituicao") @db.VarChar(10)
  associacoes InstituicaoTipoInstituicao[]
  polos       Polo[]

  @@map("instituicao")
}

model InstituicaoTipoInstituicao {
  fk_instituicao      Int
  fk_tipo_instituicao Int

  instituicao     Instituicao     @relation(fields: [fk_instituicao], references: [id])
  tipoInstituicao TipoInstituicao @relation(fields: [fk_tipo_instituicao], references: [id])

  @@id([fk_instituicao, fk_tipo_instituicao])
  @@map("tipo_instituicao_associativa")
}

model Logradouro {
  id        Int        @id @default(autoincrement()) @map("id_logradouro")
  nome      String     @unique @map("nome_logradouro") @db.VarChar(255)
  enderecos Endereco[]

  @@map("logradouro")
}

model Bairro {
  id        Int        @id @default(autoincrement()) @map("id_bairro")
  nome      String     @unique @map("nome_bairro") @db.VarChar(128)
  enderecos Endereco[]

  @@map("bairro")
}

model Cidade {
  id        Int        @id @default(autoincrement()) @map("id_cidade")
  nome      String     @unique @map("nome_cidade") @db.VarChar(64)
  enderecos Endereco[]

  @@map("cidade")
}

model Estado {
  id        Int        @id @default(autoincrement()) @map("id_estado")
  uf        String     @unique @map("uf_estado") @db.Char(2)
  enderecos Endereco[]

  @@map("estado")
}

model Endereco {
  id            Int      @id @default(autoincrement()) @map("id_endereco")
  fk_logradouro Int      @map("fk_logradouro")
  fk_bairro     Int      @map("fk_bairro")
  fk_cidade     Int      @map("fk_cidade")
  fk_estado     Int      @map("fk_estado")
  cep           String   @map("cep_endereco") @db.Char(8)
  numero        String   @map("numero_endereco") @db.VarChar(10)
  polos         Polo[]
  filiais       Filial[]

  logradouro Logradouro @relation(fields: [fk_logradouro], references: [id])
  bairro     Bairro     @relation(fields: [fk_bairro], references: [id])
  cidade     Cidade     @relation(fields: [fk_cidade], references: [id])
  estado     Estado     @relation(fields: [fk_estado], references: [id])

  @@map("endereco")
}

model Polo {
  id             Int      @id @default(autoincrement()) @map("id_polo")
  fk_instituicao Int      @map("fk_instituicao")
  fk_endereco    Int      @map("fk_endereco")
  complemento    String?  @map("complemento_end_polo") @db.VarChar(64)
  nome           String   @map("nome_polo") @db.VarChar(128)
  filiais        Filial[]

  instituicao Instituicao @relation(fields: [fk_instituicao], references: [id])
  endereco    Endereco    @relation(fields: [fk_endereco], references: [id])

  @@map("polo")
}

model TipoJuridico {
  id               Int               @id @default(autoincrement()) @map("id_tipo_juridico")
  descricao        String            @unique @map("descricao_tipo_juridico") @db.VarChar(64)
  estabelecimentos Estabelecimento[]

  @@map("tipo_juridico")
}

model Juridica {
  id               Int               @id @default(autoincrement()) @map("id_juridica")
  cnpj             String            @unique @map("cnpj_juridica") @db.Char(14)
  social           String            @map("social_juridica") @db.VarChar(64)
  fantasia         String            @map("fantasia_juridica") @db.VarChar(128)
  email            String            @map("email_juridica") @db.VarChar(128)
  estabelecimentos Estabelecimento[]

  @@map("juridica")
}

model Fisica {
  id               Int               @id @default(autoincrement()) @map("id_fisica")
  cpf              String            @unique @map("cpf_fisica") @db.Char(11)
  nome             String            @map("nome_fisica") @db.VarChar(255)
  email            String            @map("email_fisica") @db.VarChar(128)
  senha            String            @map("senha_fisica") @db.VarChar(255)
  estabelecimentos Estabelecimento[]
  colaboradores    Colaborador[]

  @@map("fisica")
}

model Estabelecimento {
  id                Int                           @id @default(autoincrement()) @map("id_estabelecimento")
  fk_fisica         Int?                          @map("fk_fisica")
  fk_juridica       Int?                          @map("fk_juridica")
  fk_tipo           Int                           @map("fk_tipo_estabelecimento")
  registro          DateTime                      @map("registro_estabelecimento") @db.Date
  telefone          String?                       @map("telefone_estabelecimento") @db.Char(10)
  celular           String                        @map("celular_estabelecimento") @db.VarChar(11)
  limite            Int                           @default(3) @map("limite_estabelecimento")
  filiais           Filial[]
  assocProprietario ProprietarioEstabelecimento[]

  fisica       Fisica?      @relation(fields: [fk_fisica], references: [id])
  juridica     Juridica?    @relation(fields: [fk_juridica], references: [id])
  tipoJuridico TipoJuridico @relation(fields: [fk_tipo], references: [id])

  @@map("estabelecimento")
}

model Filial {
  id                 Int                 @id @default(autoincrement()) @map("id_filial")
  fk_estabelecimento Int                 @map("fk_estabelecimento")
  fk_polo            Int                 @map("fk_polo")
  fk_endereco        Int?                @map("fk_endereco")
  complemento        String?             @map("complemento_end_filial") @db.VarChar(64)
  nome               String              @map("nome_filial") @db.VarChar(128)
  registro           DateTime            @map("registro_filial") @db.Date
  assocFuncionario   FuncionarioFilial[]
  estoque            ProdutoFilial[]

  estabelecimento Estabelecimento @relation(fields: [fk_estabelecimento], references: [id])
  polo            Polo            @relation(fields: [fk_polo], references: [id])
  endereco        Endereco?       @relation(fields: [fk_endereco], references: [id])

  @@map("filial")
}

model Funcao {
  id            Int           @id @default(autoincrement()) @map("id_funcao")
  descricao     String        @unique @map("descricao_funcao") @db.VarChar(64)
  colaboradores Colaborador[]

  @@map("funcao")
}

model Colaborador {
  id                Int                           @id @default(autoincrement()) @map("id_colaborador")
  fk_fisica         Int                           @map("fk_fisica")
  fk_funcao         Int                           @map("fk_funcao")
  assocProprietario ProprietarioEstabelecimento[]
  assocFuncionario  FuncionarioFilial[]

  fisica Fisica @relation(fields: [fk_fisica], references: [id])
  funcao Funcao @relation(fields: [fk_funcao], references: [id])

  @@map("colaborador")
}

model ProprietarioEstabelecimento {
  fk_colaborador     Int @map("fk_colaborador")
  fk_estabelecimento Int @map("fk_estabelecimento")

  colaborador     Colaborador     @relation(fields: [fk_colaborador], references: [id])
  estabelecimento Estabelecimento @relation(fields: [fk_estabelecimento], references: [id])

  @@id([fk_colaborador, fk_estabelecimento])
  @@map("proprietario_estabelecimento")
}

model FuncionarioFilial {
  fk_colaborador Int @map("fk_colaborador")
  fk_filial      Int @map("fk_filial")

  colaborador Colaborador @relation(fields: [fk_colaborador], references: [id])
  filial      Filial      @relation(fields: [fk_filial], references: [id])

  @@id([fk_colaborador, fk_filial])
  @@map("funcionario_filial")
}

model Produto {
  id      Int             @id @default(autoincrement()) @map("id_produto")
  nome    String          @unique @map("nome_produto") @db.VarChar(128)
  estoque ProdutoFilial[]

  @@map("produto")
}

model CategoriaProduto {
  id        Int             @id @default(autoincrement()) @map("id_categoria_produto")
  descricao String          @unique @map("descricao_categoria_produto") @db.VarChar(64)
  estoque   ProdutoFilial[]

  @@map("categoria_produto")
}

model UnidadeMedida {
  id      Int             @id @default(autoincrement()) @map("id_unidade_medida")
  nome    String          @unique @map("nome_unidade_medida") @db.VarChar(16)
  sigla   String          @unique @map("sigla_unidade_medida") @db.VarChar(4)
  estoque ProdutoFilial[]

  @@map("unidade_medida")
}

model ProdutoFilial {
  id                   Int      @id @default(autoincrement()) @map("id_produto_filial")
  fk_filial            Int      @map("fk_filial")
  fk_produto           Int      @map("fk_produto")
  fk_categoria_produto Int      @map("fk_categoria_produto")
  fk_unidade_medida    Int      @map("fk_unidade_medida")
  descricao            String   @map("descricao_produto_filial") @db.VarChar(128)
  perecivel            Boolean  @map("perecivel_produto_filial") @db.TinyInt
  preco                Float    @map("preco_produto_filial")
  quantidade_atual     Float    @default(0) @map("quantidade_atual_produto_filial")
  quantidade_minima    Float    @default(0) @map("quantidade_minima_produto_filial")
  quantidade_seguranca Float    @default(0) @map("quantidade_seguranca_produto_filial")
  data_vencimento      DateTime @map("data_vencimento_produto_filial") @db.Date

  filial           Filial           @relation(fields: [fk_filial], references: [id])
  produto          Produto          @relation(fields: [fk_produto], references: [id])
  categoriaProduto CategoriaProduto @relation(fields: [fk_categoria_produto], references: [id])
  unidadeMedida    UnidadeMedida    @relation(fields: [fk_unidade_medida], references: [id])

  @@map("produto_filial")
}
